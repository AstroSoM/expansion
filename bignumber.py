import numpy as np

def bignumber(x):
    logx = np.log10(x)
    # Some big numbers
    hundred      = 2
    thousand     = 3
    million      = 6
    billion      = 9
    trillion     = 12
    quadrillion  = 15
    quintillion  = 18
    sextillion   = 21
    septillion   = 24
    octillion    = 27
    nonillion    = 30
    decillion    = 33
    undecillion  = 36
    duodecillion = 39
    tredecillion = 42
    quattuordecillion = 45
    quindecillion   = 48
    sexdecillion    = 51
    septendecillion = 54
    octodecillion   = 57
    novemdecillion  = 60
    vigintillion    = 63
    unvigintillion  = 66
    duovigintillion = 69
    trevigintillion = 72
    quattuorvigintillion = 75
    quinvigintillion   = 78
    sexvigintillion    = 81
    septenvigintillion = 84
    octovigintillion   = 87
    novemvigintillion  = 90
    trigintillion      = 93
    untrigintillion    = 96
    duotrigintillion   = 99
    googol             = 100
    if (logx < hundred): return '', 0
    if ((logx >= hundred) and (logx < thousand)): return 'hundred', hundred
    if ((logx >= thousand) and (logx < million)): return 'thousand', thousand
    if ((logx >= million) and (logx < billion)): return 'million', million
    if ((logx >= billion) and (logx < trillion)): return 'billion', billion
    if ((logx >= trillion) and (logx < quadrillion)): return 'trillion', trillion
    if ((logx >= quadrillion) and (logx < quintillion)): return 'quadrillion', quadrillion
    if ((logx >= quintillion) and (logx < sextillion)): return 'quintillion', quintillion
    if ((logx >= sextillion) and (logx < septillion)): return 'sextillion', sextillion
    if ((logx >= septillion) and (logx < octillion)): return 'septillion', septillion
    if ((logx >= octillion) and (logx < nonillion)): return 'octillion', octillion
    if ((logx >= nonillion) and (logx < decillion)): return 'nonillion', nonillion
    if ((logx >= decillion) and (logx < undecillion)): return 'decillion', decillion
    if ((logx >= undecillion) and (logx < duodecillion)): return 'undecillion', undecillion
    if ((logx >= duodecillion) and (logx < tredecillion)): return 'duodecillion', duodecillion
    if ((logx >= tredecillion) and (logx < quattuordecillion)): return 'tredecillion', tredecillion
    if ((logx >= quattuordecillion) and (logx < quindecillion)): return 'quattuordecillion', quattuordecillion
    if ((logx >= quindecillion) and (logx < sexdecillion)): return 'quindecillion', quindecillion
    if ((logx >= sexdecillion) and (logx < septendecillion)): return 'sexdecillion', sexdecillion
    if ((logx >= septendecillion) and (logx < octodecillion)): return 'septendecillion', septendecillion
    if ((logx >= octodecillion) and (logx < novemdecillion)): return 'octodecillion', octodecillion
    if ((logx >= novemdecillion) and (logx < vigintillion)): return 'novemdecillion', novemdecillion
    if ((logx >= vigintillion) and (logx < unvigintillion)): return 'vigintillion', vigintillion
    if ((logx >= unvigintillion) and (logx < duovigintillion)): return 'unvigintillion', unvigintillion
    if ((logx >= duovigintillion) and (logx < trevigintillion)): return 'duovigintillion', duovigintillion
    if ((logx >= trevigintillion) and (logx < quattuorvigintillion)): return 'trevigintillion', trevigintillion
    if ((logx >= quattuorvigintillion) and (logx < quinvigintillion)): return 'quattuorvigintillion', quattuorvigintillion
    if ((logx >= quinvigintillion) and (logx < sexvigintillion)): return 'quinvigintillion', quinvigintillion
    if ((logx >= sexvigintillion) and (logx < septenvigintillion)): return 'sexvigintillion', sexvigintillion
    if ((logx >= septenvigintillion) and (logx < octovigintillion)): return 'septenvigintillion', septenvigintillion
    if ((logx >= octovigintillion) and (logx < novemvigintillion)): return 'octovigintillion', octovigintillion
    if ((logx >= novemvigintillion) and (logx < trigintillion)): return 'novemvigintillion', novemvigintillion
    if ((logx >= trigintillion) and (logx < untrigintillion)): return 'trigintillion', trigintillion
    if ((logx >= untrigintillion) and (logx < duotrigintillion)): return 'untrigintillion', untrigintillion
    if ((logx >= duotrigintillion) and (logx < googol)): return 'duotrigintillion', duotrigintillion
    if (logx >= googol): return 'googol', googol
